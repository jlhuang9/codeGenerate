package ${service_impl_package};

import com.motorsc.match.common.tool.ConstCode;
import com.motorsc.match.common.tool.PageResult;
import ${dao_package}.${model}Dao;
import ${entry_package}.${model}Pojo;
import ${service_package}.${model}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

/**
 * ${model}Service接口实现
 * table ${table}
 * comment ${table_coment}
 * Created by ${author} on ${ctime}.
 */
@Service
public class ${model}ServiceImpl implements ${model}Service {

    @Autowired
    ${model}Dao ${model_low_first}Dao;

    /**
     * 获取分页
     * @param matchMessagesPojo
     * @return
     */
    @Override
    public PageResult<${model}Pojo> get${model}List(${model}Pojo ${model_low_first}Pojo) {
        long count = ${model_low_first}Dao.count(${model_low_first}Pojo);
        List<${model}Pojo> list = ${model_low_first}Dao.findList(${model_low_first}Pojo);
        return PageResult.getPageSuccessInstance(list, "success", ConstCode.OPERAT_SUCCESS, count, ${model_low_first}Pojo.getPageSize(), ${model_low_first}Pojo.getPage());
    }

    /**
     * id获取单个实例
     * @param id
     * @return
     */
    @Override
    public ${model}Pojo get(long id) {
        return ${model_low_first}Dao.get(id);
    }

    /**
     * 获取单个实例
     * @param ${model_low_first}Pojo
     * @return
     */
    @Override
    public ${model}Pojo getEntry(${model}Pojo ${model_low_first}Pojo) {
        return ${model_low_first}Dao.getEntry(${model_low_first}Pojo);
    }

    /**
     * 删除数据（一般为逻辑删除，更新yn字段为1）
     *
     * @param id
     * @return
     * @see int delete(${model}Pojo ${model_low_first}Pojo)
     */
    @Override
    public int delete(long id) {
        return ${model_low_first}Dao.delete(id);
    }

    /**
     * 删除数据（一般为逻辑删除，更新yn字段为1）
     *
     * @param ${model_low_first}Pojo
     * @return
     * @see int delete(${model}Pojo ${model_low_first}Pojo)
     */
    @Override
    public int deleteEntry(${model}Pojo ${model_low_first}Pojo) {
        return ${model_low_first}Dao.deleteEntry(${model_low_first}Pojo);
    }

    /**
     * 插入数据
     *
     * @param ${model_low_first}Pojo
     * @return
     */
    @Override
    public int insert(${model}Pojo ${model_low_first}Pojo) {
        return ${model_low_first}Dao.insert(${model_low_first}Pojo);
    }

    /**
     * 更新数据
     *
     * @param ${model_low_first}Pojo
     * @return
     */
    @Override
    public int update(${model}Pojo ${model_low_first}Pojo) {
        return ${model_low_first}Dao.update(${model_low_first}Pojo);
    }
}
